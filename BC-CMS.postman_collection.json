{
	"info": {
		"_postman_id": "6ad534ec-e7c0-43e7-9b05-627e472545ef",
		"name": "BC-CMS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Workflows",
			"item": [
				{
					"name": "workflow",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"styles\": [\r\n        {\r\n            \"styleId\": \"CK9996\",\r\n            \"brand\": \"calvin klein\",\r\n            \"title\": \"Calvin Klein Men's Boxer Briefs\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}workflows?email=pc.admin@backcountry.com",
							"host": [
								"{{url}}workflows"
							],
							"query": [
								{
									"key": "email",
									"value": "pc.admin@backcountry.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "workflow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}workflows/6481922af7d86830f4424127",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"6481922af7d86830f4424127"
							]
						}
					},
					"response": []
				},
				{
					"name": "assign",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"filters\": {\r\n        // \"id\": \"{{workflowId}}\"\r\n        // \"id\": [\"64817792f6cd8d0bd7c0cce3\",\"6481782bf6cd8d0bd7c0cd40\"]\r\n        // \"brand\": [\r\n        //     \"puma\"\r\n        // ]\r\n        // \"brand\": \"nike\"\r\n        // \"assiee\": \"writer 3\"\r\n        // \"styleId\": [\"JCK001\",\"JCK002\",\"JCK03\"]\r\n        // \"status\": \"WRITING_IN_PROGRESS\"\r\n        // \"lastUpdateTs\": \"2023-MAY-12\"\r\n        // \"lastUpdatedBy\": \"deepthi\"\r\n        // \"assignee\": [\"nikhil\"],\r\n        // \"excludeId\": [\"647746bcc58fe1cfe9356ac6\"]\r\n    },\r\n    \"assignments\": {\r\n        // \"editor\": \"editor1@backcountry.com\"\r\n        \"writer\": \"pc.writer@backcountry.com\"\r\n    }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}workflows/assign?email=pc.admin@backcountry.com",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"assign"
							],
							"query": [
								{
									"key": "email",
									"value": "pc.admin@backcountry.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "workflow",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bulletPoints\": \"bullet points\",\r\n    \"competitiveCyclistDescription\": \"desc 123 1\",\r\n    \"competitiveCyclistTopline\": \"top line 33\",\r\n    \"detailedDescription\": \"Detailed desc val1\",\r\n    \"genus\": \"Climbing accessories\",\r\n    \"listDescription\": \"My list of desc\",\r\n    \"productTitle\": \"My product title123\",\r\n    \"sizingChart\": \"my sizing chart\",\r\n    \"species\": \"Belay Devices\",\r\n    \"topLine\": \"The top line\",\r\n    \"versionReason\": \"Editing\",\r\n    \"harmonizingData\": {\r\n        \"recommendedUse\": [\r\n            \"Ice climbing\"\r\n        ],\r\n        \"ropeDiameter\": [\r\n            \"<8.5mm\"\r\n        ],\r\n        \"type\": [\r\n            \"Figure 8\"\r\n        ]\r\n    },\r\n    \"techspecs\": {\r\n        \"responsibleCollection\": \"Shirts sot\",\r\n        \"material\": \"Material soft\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}workflows/{{workflowId}}?email=nikhil.s@backcountry.com",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"{{workflowId}}"
							],
							"query": [
								{
									"key": "email",
									"value": "nikhil.s@backcountry.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "workflow/workflowId/history",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}workflows/{{workflowId}}/history",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"{{workflowId}}",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "workflow/workflowId/history/historyId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}workflows/{{workflowId}}/history/64819283f7d86830f442412e",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"{{workflowId}}",
								"history",
								"64819283f7d86830f442412e"
							]
						}
					},
					"response": []
				},
				{
					"name": "workflows/search",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"filters\": {\r\n        \"globalSearch\":[\"backcountry\",\"JCK001\"],\r\n        // \"brand\": \"Rolex\"\r\n        // \"brand\": [\r\n        //     \"puma\"\r\n        // ]\r\n        // \"brand\": \"Rolex\"\r\n        // \"assiee\": \"writer 3\",\r\n        \"styleId\": [\"JCK001\"]\r\n        // \"status\": [\r\n        //     \"ASSIGNED_TO_WRITER\",\r\n        //     \"WRITING_IN_PROGRESS\"\r\n        // ]\r\n        // \"lastUpdateTs\": \"2023-MAY-12\"\r\n        // \"lastUpdatedBy\": \"deepthi\"\r\n        // \"assignee\": [\"nikhil\"],  \r\n    },\r\n    \"orderBy\": [\r\n        {\r\n            \"lastUpdateTs\": \"desc\"\r\n        },\r\n        {\r\n            \"styleId\": \"asc\"\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}workflows/search?limit=10&page=1",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "unique",
									"value": "status",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "workflows/search?unique",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"filters\": {\r\n        \"globalSearch\":[\"backcountry\",\"JCK001\"],\r\n        // \"brand\": \"Rolex\" \r\n        // \"brand\": [\r\n        //     \"puma\"\r\n        // ]\r\n        // \"brand\": \"Rolex\"\r\n        // \"assiee\": \"writer 3\",\r\n        \"styleId\": [\"JCK001\"]\r\n        // \"status\": [\r\n        //     \"ASSIGNED_TO_WRITER\",\r\n        //     \"WRITING_IN_PROGRESS\"\r\n        // ]\r\n        // \"lastUpdateTs\": \"2023-MAY-12\"\r\n        // \"lastUpdatedBy\": \"deepthi\"\r\n        // \"assignee\": [\"nikhil\"],  \r\n    },\r\n    \"orderBy\": [\r\n        {\r\n            \"lastUpdateTs\": \"desc\"\r\n        },\r\n        {\r\n            \"styleId\": \"asc\"\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}workflows/search?limit=10&page=1&unique=assignee",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "unique",
									"value": "assignee"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "counts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}workflows/counts?email=raj.kumar@backcountry.com",
							"host": [
								"{{url}}workflows"
							],
							"path": [
								"counts"
							],
							"query": [
								{
									"key": "email",
									"value": "raj.kumar@backcountry.com"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// // Test the POST /workflows endpoint",
							"// pm.test(\"Create Workflow\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows\",",
							"//         method: \"POST\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         },",
							"//         body: {",
							"            ",
							"//         \"admin\": \"The Admin\",",
							"//         \"brand\": \"My Brand1\",",
							"//         \"create_process\": \"WRITER_INTERFACE\",",
							"//         \"create_ts\": \"2023-03-28T23:58:18.000Z\",",
							"//         \"editor\": \"The Editor\",",
							"//         \"editor_review\": true,",
							"//         \"last_edit_complete_ts\": \"2023-03-30T23:58:18.000Z\",",
							"//         \"last_update_ts\": \"2023-03-30T23:58:18.000Z\",",
							"//         \"last_updated_by\": \"Andrew Smith\",",
							"//         \"last_write_complete_ts\": \"2023-03-29T23:58:18.000Z\",",
							"//         \"status\": \"WAITING_FOR_WRITER\",",
							"//         \"style_id\": pm.variables.get(\"workflowId\"),",
							"//         \"title\": \"My product title1\",",
							"//         \"writer\": \"The Writer\"",
							"//         }",
							"//     }, function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflow\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });",
							"",
							"// // Test the GET /workflows endpoint",
							"// pm.test(\"Get Workflows\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows\",",
							"//         method: \"GET\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         }",
							"//     }, function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflows\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });",
							"",
							"// // Test the GET /workflows/:id endpoint",
							"// pm.test(\"Get Workflow by ID\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows/{{workflowId}}\",",
							"//         method: \"GET\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         }",
							"//     }, function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflow\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });",
							"",
							"// // Test the GET /workflows/search endpoint",
							"// pm.test(\"Search Workflows\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows/search\",",
							"//         method: \"GET\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         },",
							"//         params: {",
							"//             query: \"searchQuery\"",
							"//         }",
							"//     }, function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflows\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });",
							"",
							"// // Test the PATCH /workflows/:id endpoint",
							"// pm.test(\"Update Workflow\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows/{{workflowId}}\",",
							"//         method: \"PATCH\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         },",
							"//         body: {",
							"//             mode: \"raw\",",
							"//             raw: JSON.stringify({",
							"//                 // Provide the necessary data for updating the workflow",
							"//                 // e.g., name, description, etc.",
							"//             })",
							"//         }",
							"//     }, function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflow\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });",
							"",
							"// // Test the DELETE /workflows/:id endpoint",
							"// pm.test(\"Delete Workflow\", function () {",
							"//     pm.sendRequest({",
							"//         url: pm.variables.get(\"url\") + \"/workflows/{{workflowId}}\",",
							"//         method: \"DELETE\",",
							"//         header: {",
							"//             \"Content-Type\": \"application/json\"",
							"//         }",
							"//     },function (err, response) {",
							"//         pm.expect(err).to.be.null;",
							"//         pm.expect(response).to.have.status(200);",
							"//         pm.expect(response.json()).to.have.property(\"workflow\");",
							"//         // Add additional assertions as needed",
							"//     });",
							"// });"
						]
					}
				}
			]
		},
		{
			"name": "dataNormalization",
			"item": [
				{
					"name": "genus",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{cookie}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{url}}dataNormalization/genus",
							"host": [
								"{{url}}dataNormalization"
							],
							"path": [
								"genus"
							]
						}
					},
					"response": []
				},
				{
					"name": "genus/:id/speices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{cookie}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{url}}dataNormalization/genus/165/species",
							"host": [
								"{{url}}dataNormalization"
							],
							"path": [
								"genus",
								"165",
								"species"
							]
						}
					},
					"response": []
				},
				{
					"name": "styles/:id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{cookie}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{url}}dataNormalization/styles/ATRQ03Y",
							"host": [
								"{{url}}dataNormalization"
							],
							"path": [
								"styles",
								"ATRQ03Y"
							]
						}
					},
					"response": []
				},
				{
					"name": "techSpecs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{cookie}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{url}}dataNormalization/styles/ATRQ03Y/techSpecs",
							"host": [
								"{{url}}dataNormalization"
							],
							"path": [
								"styles",
								"ATRQ03Y",
								"techSpecs"
							],
							"query": [
								{
									"key": "Cookie",
									"value": "{{cookie}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/genus/:gId/species/:sId/hAttributes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}dataNormalization/genus/22/species/197/hAttributes?Cookie={{cookie}}",
							"host": [
								"{{url}}dataNormalization"
							],
							"path": [
								"genus",
								"22",
								"species",
								"197",
								"hAttributes"
							],
							"query": [
								{
									"key": "Cookie",
									"value": "{{cookie}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}users",
							"host": [
								"{{url}}users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}groups/token",
							"host": [
								"{{url}}groups"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}groups/editors/members",
							"host": [
								"{{url}}groups"
							],
							"path": [
								"editors",
								"members"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}