generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type WorkbenchAuditHarmonizingData {
  Recommended_Use String[] @map("Recommended Use")
  Rope_Diameter   String[] @map("Rope Diameter")
  Type            String[]
}

type WorkbenchAuditTechspecs {
  Material               String
  Responsible_Collection String @map("Responsible Collection")
}

enum CreateProcess {
  TOPIC
  WRITER_INTERFACE
}

enum Status {
  WAITING_FOR_WRITER
  ASSIGNED_TO_WRITER
  WRITING_IN_PROGRESS
  WRITING_COMPLETE
  ASSIGNED_TO_EDITOR
  EDITING_IN_PROGRESS
  EDITING_COMPLETE
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model workbenchAudit {
  id                            String                        @id @default(auto()) @map("_id") @db.ObjectId
  assignee                      String
  bulletPoints                  String
  competitiveCyclistDescription String
  competitiveCyclistTopline     String
  detailedDescription           String
  genus                         String
  harmonizingData               WorkbenchAuditHarmonizingData
  isPublished                   Boolean
  listDescription               String
  productTitle                  String
  sizingChart                   String
  species                       String
  status                        String
  styleId                       String
  techspecs                     WorkbenchAuditTechspecs
  topLine                       String
  versionReason                 String
  versionTs                     DateTime                      @db.Date
  workflowId                    String                        @db.ObjectId
  workflow                      workflow                      @relation(fields: [workflowId], references: [id])
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model workflow {
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  admin               String?
  brand               String?
  createProcess       CreateProcess
  createTs            DateTime         @default(now()) @db.Date
  editor              String?
  editorReview        Boolean?
  lastEditCompleteTs  DateTime?        @db.Date
  lastUpdateTs        DateTime         @default(now()) @db.Date
  lastUpdatedBy       String?
  lastWriteCompleteTs DateTime?        @db.Date
  status              Status           @default(WAITING_FOR_WRITER)
  styleId             String           @unique
  title               String?
  writer              String?
  assignee            String?
  workbenchAudits     workbenchAudit[]
}
