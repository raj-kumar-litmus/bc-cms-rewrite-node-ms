datasource db {
  provider = "mongodb"
  url      = env("MONGODB_DATABASE_URL")
}

generator mongoClient {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client/mongo"
}

type WorkbenchAuditHarmonizingData {
  Recommended_Use String[] @map("Recommended Use")
  Rope_Diameter   String[] @map("Rope Diameter")
  Type            String[]
}

type WorkbenchAuditTechspecs {
  Material               String
  Responsible_Collection String @map("Responsible Collection")
}

enum CreateProcess {
  TOPIC
  WRITER_INTERFACE
}

enum Status {
  WAITING_FOR_WRITER
  ASSIGNED_TO_WRITER
  WRITING_IN_PROGRESS
  WRITING_COMPLETE
  ASSIGNED_TO_EDITOR
  EDITING_IN_PROGRESS
  EDITING_COMPLETE
}

enum AuditType {
  ASSIGNMENTS
  DATA_NORMALIZATION
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model workbenchAudit {
  id                            String    @id @default(auto()) @map("_id") @db.ObjectId
  assignee                      String?
  bulletPoints                  Json?
  competitiveCyclistDescription String?
  competitiveCyclistTopline     String?
  detailedDescription           String?
  genus                         String?
  isPublished                   Boolean?
  listDescription               String?
  productTitle                  String?
  sizingChart                   String?
  species                       String?
  status                        String?
  topLine                       String?
  versionReason                 String?
  createTs                      DateTime  @default(now()) @db.Date
  createdBy                     String
  auditType                     AuditType
  workflowId                    String    @db.ObjectId
  workflow                      workflow  @relation(fields: [workflowId], references: [id])
  lastEditCompleteTs            DateTime? @db.Date
  lastWriteCompleteTs           DateTime? @db.Date
  editor                        String?
  writer                        String?
  harmonizingData               Json?
  techSpecs                     Json?
  changeLog                     Json?
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model workflow {
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  admin               String?
  brand               String?
  createProcess       CreateProcess
  createTs            DateTime         @default(now()) @db.Date
  editor              String?
  editorReview        Boolean?
  lastEditCompleteTs  DateTime?        @db.Date
  lastUpdateTs        DateTime         @default(now()) @updatedAt @db.Date
  lastUpdatedBy       String?
  lastWriteCompleteTs DateTime?        @db.Date
  status              Status           @default(WAITING_FOR_WRITER)
  styleId             String           @unique
  title               String?
  writer              String?
  assignee            String?
  workbenchAudits     workbenchAudit[]
}
